#!/usr/bin/python
import os
import sys
from stat import S_ISREG, ST_CTIME, ST_MODE
import time
import re
import struct
import ctypes
from ctypes import cdll
apparmor = cdll.LoadLibrary('/usr/lib/libapparmor.so')

if apparmor.aa_change_profile("restricted_books".encode('utf-8')):
  print("Armor error")
  sys.exit(1)

# https://stackoverflow.com/questions/4813061/non-alphanumeric-list-order-from-os-listdir
def sorted_aphanumeric(data):
  convert = lambda text: int(text) if text.isdigit() else text.lower()
  alphanum_key = lambda key: [ convert(c) for c in re.split('([0-9]+)', key) ] 
  return sorted(data, key=alphanum_key)

# header
print("""Content-Type:text/html;charset=utf-8

<!DOCTYPE html>
<html>
<head>
<title>Intranet Books</title>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width">
<link rel="icon" type="image/svg+xml" href="icon.svg">
<style>
html { font-size: 1.75em; }
</style>
</head>
<body>""")

# feature top most recent non-empty activity
featured = 0
progresses = [(name, os.stat('progress/' + name)) for name in os.listdir('progress')]
progresses = sorted(progresses, key = lambda x: x[1].st_mtime, reverse = True)
print('<table><tr>')
for p in progresses:
  title = p[0]
  with open('progress/' + title, mode='rb') as f:
    page = struct.unpack("i", f.read(4))[0]
    if page > 1:
      # TODO make a function (this snippet was copied from view)
      listing = os.listdir('books/' + title)
      max_page = len(listing)
      sample = listing[0]
      page_index = sample.rfind('_') + 1
      count = sample.rfind('.') - page_index
      filename = ("{}{:0>"+str(count)+"d}.jpg").format(sample[0:page_index], page)
      print('''<td style="border: 1px solid black;">
<table><tr>
<td align="center"><a href="view?page={1}&fit={2}&title={0}">
<img src="books/{0}/{3}" height="400"/>
</a></td></tr>
<tr><td align="center">{5} ({4:1.0f}%)</td></tr></table></td>
'''.format(title, page, "no", filename, (page - 1) / (max_page - 1) * 100, title.replace('_', ' ')))

      featured += 1
      if featured >= 3: break
print('</tr></table>')

# list of available books
files = sorted_aphanumeric(os.listdir("books"))
for title in files:

  # folder (unzipped cbz)
  if os.path.isdir('books/' + title):
    print('<a href="view?page={1}&fit={2}&title={0}">{0}</a>'.format(title, 1, "no"), end = '')

    # resume link
    if os.path.isfile('progress/' + title):
      with open('progress/' + title, mode='rb') as f:
        page = struct.unpack("i", f.read(4))[0]
        if page > 1:
          max_page = len(os.listdir('books/' + title))
          # using nbsp due to a bug in all android browsers
          print('&nbsp;<a href="view?page={1}&fit={2}&title={0}">(Resume&nbsp;{3:1.0f}%)</a>'.format(title, page, "no", (page - 1) / (max_page - 1) * 100))
    print('<br/>')

  # epub
  elif title.endswith(".epub"):
    # using nbsp due to a bug in all android browsers
    print('<a href="{1}">{0}</a>'.format(title, 'books/' + title), end = '')
    print('&nbsp;<a href="export?title={}">(mobi)</a>'.format(title))
    print('<br/>')

# footer
print("""</body>
</html>""")

